{"version":3,"file":"element.min.js","sources":["../../../../src/app/block/item/element.js"],"sourcesContent":["import ModalDeleteCancel from 'core/modal_delete_cancel';\nimport ModalEvents from 'core/modal_events';\nimport Notification from \"core/notification\";\nimport {get_strings} from \"core/str\";\nimport Ajax from \"core/ajax\";\n\nconst polls = [];\n\nexport default class ItemElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {BlockElement}\n     */\n    #blockElement;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @param {BaseFactory} baseFactory\n     * @param {BlockElement} blockElement\n     * @param {HTMLElement} element\n     */\n    constructor(baseFactory, blockElement, element) {\n        this.#baseFactory = baseFactory;\n        this.#blockElement = blockElement;\n        this.#element = element;\n\n        if (this.#element.dataset.status === '0') {\n            this.#pollItem();\n        }\n\n        this.#addEventListeners();\n    }\n\n    #pollItem(currentTry = 0, retries = -1, uuid = null) {\n        if (uuid === null) {\n            uuid = crypto.randomUUID();\n\n            if (polls[this.getItemId()]) {\n                return;\n            }\n\n            polls[this.getItemId()] = uuid;\n        } else if (polls[this.getItemId()] !== uuid) {\n            return;\n        }\n\n        currentTry += 1;\n\n        if (retries !== -1 && currentTry >= retries) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_get_item_from_sharing_cart',\n            args: {\n                item_id: this.getItemId(),\n            },\n            done: async(item) => {\n                if (item.status === 0) {\n                    // Cap the timeout at 10 seconds\n                    const timeOut = currentTry > 10 ? 10000 : currentTry * 1000;\n\n                    setTimeout(() => {\n                        this.#pollItem(currentTry, retries, uuid);\n                    }, timeOut);\n                    return;\n                }\n\n                // Remove the item from the polls array\n                polls.splice(this.getItemId(), 1);\n\n                await this.#blockElement.renderItem(item);\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    #addEventListeners() {\n        this.#element.querySelector('.info').addEventListener('click', this.toggleCollapseRecursively.bind(this));\n\n        const checkbox = this.#element.querySelector('input[data-action=\"bulk_select\"][type=\"checkbox\"]');\n        checkbox?.addEventListener('click', (e) => {\n            e.stopImmediatePropagation();\n\n            this.#blockElement.updateSelectAllState();\n            this.#blockElement.updateBulkDeleteButtonState();\n        });\n\n        const actionsContainer = this.#element.querySelector(':scope > .item-body .sharing_cart_item_actions');\n\n        actionsContainer?.querySelector('[data-action=\"delete\"]')?.addEventListener(\n            'click',\n            this.confirmDeleteItem.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"copy_to_course\"]')?.addEventListener(\n            'click',\n            this.copyItemToCourse.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"run_now\"]')?.addEventListener(\n            'click',\n            this.runNow.bind(this)\n        );\n    }\n\n    async copyItemToCourse(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        await this.#blockElement.setClipboard(this);\n    }\n\n    async runNow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        const currentTarget = e.currentTarget;\n        currentTarget.disabled = true;\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_run_task_now',\n            args: {\n                task_id: currentTarget?.dataset?.taskId ?? null,\n            },\n            done: async () => {\n                currentTarget.remove();\n                this.#pollItem();\n            },\n            fail: (data) => {\n                Notification.exception(data);\n                currentTarget.disabled = false;\n            }\n        }]);\n    }\n\n    async confirmDeleteItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'delete',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const modal = await ModalDeleteCancel.create({\n            title: strings[0] + ': \"' + this.getItemName().slice(0, 50).trim() + '\"',\n            body: strings[1],\n            buttons: {\n                delete: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.delete, this.#blockElement.deleteItem.bind(this.#blockElement, this));\n        await modal.show();\n    }\n\n    /**\n     * @return {NodeListOf<HTMLElement>}\n     */\n    getItemChildrenRecursively() {\n        return this.#element.querySelectorAll('.sharing_cart_item');\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemElement() {\n        return this.#element;\n    }\n\n    getStatus() {\n        return this.#element.dataset.status;\n    }\n\n    /**\n     * @return {String}\n     */\n    getItemName() {\n        return this.#element.querySelector('.name').innerText;\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemId() {\n        return Number.parseInt(this.#element.dataset.itemid);\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemOldInstanceId() {\n        return Number.parseInt(this.#element.dataset.oldinstanceid);\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemInfo() {\n        return this.#element.querySelector('.info');\n    }\n\n    /**\n     * @param {HTMLElement} item\n     * @param {Boolean|NULL} collapse\n     */\n    toggleCollapse(item, collapse = null) {\n        if (item.dataset.type !== 'section' &&\n            item.dataset.status !== '0' &&\n            item.dataset.status !== '2') {\n            return;\n        }\n\n        if (collapse !== null) {\n            item.dataset.collapsed = collapse ? 'true' : 'false';\n        } else {\n            item.dataset.collapsed = item.dataset.collapsed === 'true' ? 'false' : 'true';\n        }\n\n        const iconElement = item.querySelector('.info > i');\n        if (\n            !iconElement.classList.contains('fa-exclamation-triangle') &&\n            !iconElement.classList.contains('fa-exclamation-circle')\n        ) {\n            iconElement.classList.remove('fa-folder-o', 'fa-folder-open-o');\n            iconElement.classList.add(item.dataset.collapsed === 'true' ? 'fa-folder-o' : 'fa-folder-open-o');\n        }\n    }\n\n    isModule() {\n        return !this.isSection();\n    }\n\n    isSection() {\n        return this.#element.dataset.type === 'section';\n    }\n\n    /**\n     * @param {Event} e\n     */\n    toggleCollapseRecursively(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        if (this.isModule() || this.#element.dataset.status !== '1') {\n            return;\n        }\n\n        this.toggleCollapse(this.#element);\n        this.getItemChildrenRecursively().forEach((item) => {\n            this.toggleCollapse(item, this.#element.dataset.collapsed === 'true');\n        });\n    }\n\n    remove() {\n        this.#element.remove();\n    }\n}\n"],"names":["polls","currentTry","retries","uuid","crypto","randomUUID","this","getItemId","call","methodname","args","item_id","done","async","item","status","splice","_classPrivateFieldGet","renderItem","setTimeout","fail","data","exception","querySelector","addEventListener","toggleCollapseRecursively","bind","checkbox","e","stopImmediatePropagation","updateSelectAllState","updateBulkDeleteButtonState","actionsContainer","confirmDeleteItem","copyItemToCourse","runNow","constructor","baseFactory","blockElement","element","dataset","preventDefault","stopPropagation","setClipboard","currentTarget","disabled","task_id","_currentTarget$datase2","taskId","remove","strings","key","component","modal","ModalDeleteCancel","create","title","getItemName","slice","trim","body","buttons","delete","cancel","removeOnClose","getRoot","on","ModalEvents","deleteItem","show","getItemChildrenRecursively","querySelectorAll","getItemElement","getStatus","innerText","Number","parseInt","itemid","getItemOldInstanceId","oldinstanceid","getItemInfo","toggleCollapse","collapse","type","collapsed","iconElement","classList","contains","add","isModule","isSection","forEach"],"mappings":"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"}